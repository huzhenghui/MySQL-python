- hosts: all
  become: yes
  become_user: root
  gather_facts: True
  tasks:
    - name: whoami
      command: whoami
      register: command_output
    - debug: var=command_output.stdout

    - name: yum install -q -y rpm-build yum-utils gnupg2 rsync deltarpm gcc
      yum:
        name:
          - rpm-build
          - yum-utils
          - gnupg2
          - rsync
          - deltarpm
          - gcc
      register: yum_output
    - debug: var=yum_output

    - name: install -d /usr/local/builds/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
      command: "install -d /usr/local/builds/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}"
      register: command_output
    - debug: var=command_output.stdout

    - name: echo "%_topdir /usr/local/builds/rpmbuild" > ~/.rpmmacros
      lineinfile:
        path: ~/.rpmmacros
        create: yes
        line: "%_topdir /usr/local/builds/rpmbuild"
        state: present
      register: lineinfile_output
    - debug: var=lineinfile_output

    - name: cd "$(mktemp -d)"
      tempfile:
        state: directory
      register: temporary_directory
    - debug: var=temporary_directory

    - name: Set temporary_directory_path
      set_fact:
        temporary_directory_path: "{{ temporary_directory.path }}"

    - name: pwd
      command:
        cmd: pwd
        chdir: "{{ temporary_directory_path }}"
      register: command_output
    - debug: var=command_output.stdout

    - name: yumdownloader --source -q MySQL-python
      command: 
        cmd: yumdownloader --source -q MySQL-python
        chdir: "{{ temporary_directory_path }}"
        creates: "{{ temporary_directory_path }}/MySQL-python-1.2.5-1.el7.src.rpm"
      register: command_output
    - debug: var=command_output.stdout

    - name: rpm2cpio "$(ls -1 MySQL-python*src.rpm)" | cpio -idmv
      shell:
        cmd: rpm2cpio "$(ls -1 MySQL-python*src.rpm)" | cpio -idmv
        chdir: "{{ temporary_directory_path }}"
      register: shell_output
    - debug: var=shell_output

    - name: SRC_ZIP="$(ls -1 MySQL-python*.zip)"
      shell:
        cmd: ls -1 MySQL-python*.zip
        chdir: "{{ temporary_directory_path }}"
      register: SRC_ZIP
    - debug: var=SRC_ZIP.stdout

    - name: unzip "${SRC_ZIP}"
      unarchive:
        src: "{{ temporary_directory_path }}/{{ SRC_ZIP.stdout }}"
        dest: "{{ temporary_directory_path }}"
        remote_src: yes
      register: unarchive_output
    - debug: var=unarchive_output

    - name: SRC_DIR=$(find . -maxdepth 1 -type d -name "MySQL-python*")
      shell:
        cmd: find . -maxdepth 1 -type d -name "MySQL-python*"
        chdir: "{{ temporary_directory_path }}"
      register: SRC_DIR
    - debug: var=SRC_DIR.stdout

    - name: sed -i 's/#include "my_config.h"/#define NO_MY_CONFIG/' "${SRC_DIR}/_mysql.c"
      lineinfile:
        path: "{{ temporary_directory_path }}/{{ SRC_DIR.stdout }}/_mysql.c"
        regexp: '#include "my_config.h"'
        line: '#define NO_MY_CONFIG'
      register: lineinfile_output
    - debug: var=lineinfile_output

    - name: fgrep -m1 -B3 -A1 -n NO_MY_CONFIG "${SRC_DIR}/_mysql.c"
      command:
        cmd: fgrep -m1 -B3 -A1 -n NO_MY_CONFIG "_mysql.c"
        chdir: "{{ temporary_directory_path }}/{{ SRC_DIR.stdout }}"
      register: command_output
    - debug: var=command_output.stdout

    - name: zip -uv "${SRC_ZIP}" "${SRC_DIR}/_mysql.c"
      archive:
        path: "{{ temporary_directory_path }}/{{ SRC_DIR.stdout }}"
        dest: "{{ temporary_directory_path }}/{{ SRC_ZIP.stdout }}"
        format: zip
      register: archive_output
    - debug: var=archive_output

    - name: rsync -ac ./ /usr/local/builds/rpmbuild/SOURCES/
      synchronize:
        src: "{{ temporary_directory_path }}/"
        dest: /usr/local/builds/rpmbuild/SOURCES/
      delegate_to: "{{ inventory_hostname }}"
      register: synchronize_output
    - debug: var=synchronize_output

    - name: mkdir /usr/local/builds/rpmbuild/SPECS/
      file:
        path: /usr/local/builds/rpmbuild/SPECS/
        state: directory
      register: file_output
    - debug: var=file_output

    - name: cp -a MySQL-python.spec /usr/local/builds/rpmbuild/SPECS/
      copy:
        src: "{{ temporary_directory_path }}/MySQL-python.spec"
        dest: /usr/local/builds/rpmbuild/SPECS/
        remote_src: yes
      register: copy_output
    - debug: var=copy_output

    - name: rpmbuild --define "buildno 2" -bs /usr/local/builds/rpmbuild/SPECS/MySQL-python.spec 
      command: rpmbuild --define "buildno 2" -bs /usr/local/builds/rpmbuild/SPECS/MySQL-python.spec 
      register: command_output
    - debug: var=command_output.stdout

    - name: yum-builddep -q -y /usr/local/builds/rpmbuild/SRPMS/MySQL-python-1.2.5-1.el7.src.rpm
      command: 
        cmd: yum-builddep -q -y /usr/local/builds/rpmbuild/SRPMS/MySQL-python-1.2.5-1.el7.src.rpm
      register: command_output
    - debug: var=command_output.stdout

    - name: rpmbuild --define "buildno 2" --rebuild /usr/local/builds/rpmbuild/SRPMS/MySQL-python-1.2.5-1.el7.src.rpm
      command: rpmbuild --define "buildno 2" --rebuild /usr/local/builds/rpmbuild/SRPMS/MySQL-python-1.2.5-1.el7.src.rpm
      register: command_output
    - debug: var=command_output.stdout

    - name: yum localinstall -q -y /usr/local/builds/rpmbuild/RPMS/x86_64/MySQL-python-1.2.5-1.el7.x86_64.rpm
      yum:
        name: /usr/local/builds/rpmbuild/RPMS/x86_64/MySQL-python-1.2.5-1.el7.x86_64.rpm
        state: present
      register: yum_output
    - debug: var=yum_output.stdout

    - name: ldd /usr/lib64/python2.7/site-packages/_mysql.so | grep libmysqlclient.so
      shell: ldd /usr/lib64/python2.7/site-packages/_mysql.so | grep libmysqlclient.so
      register: command_output
    - debug: var=command_output.stdout

    - name: fetch /usr/local/builds/rpmbuild/RPMS/x86_64/MySQL-python-1.2.5-1.el7.x86_64.rpm
      fetch:
        src: /usr/local/builds/rpmbuild/RPMS/x86_64/MySQL-python-1.2.5-1.el7.x86_64.rpm
        dest: ./releases/
        flat: yes